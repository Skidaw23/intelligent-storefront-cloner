{% comment %}
==============================================
INTELLIGENT STOREFRONT CLONER - SCHEMA BUILDER
==============================================
Advanced schema builder with Builder pattern implementation.
Creates comprehensive admin controls with conditional visibility.

Features:
- Builder pattern implementation
- Conditional field visibility
- Advanced field types
- Validation system
- Auto-generated documentation
==============================================
{% endcomment %}

{% liquid
  comment 'Initialize Schema Builder'
  assign schema_builder_fields = blank
  assign schema_builder_presets = blank
  assign schema_builder_conditional_logic = blank
%}

{% comment %} SCHEMA BUILDER FACTORY METHODS {% endcomment %}

{% comment %} Text Field Builder {% endcomment %}
{% liquid
  assign build_text_field_id = build_text_field_id | default: ''
  assign build_text_field_label = build_text_field_label | default: ''
  assign build_text_field_default = build_text_field_default | default: ''
  assign build_text_field_placeholder = build_text_field_placeholder | default: ''
  assign build_text_field_info = build_text_field_info | default: ''
%}

{% comment %} Rich Text Field Builder {% endcomment %}
{% liquid
  assign build_richtext_field_id = build_richtext_field_id | default: ''
  assign build_richtext_field_label = build_richtext_field_label | default: ''
  assign build_richtext_field_default = build_richtext_field_default | default: ''
%}

{% comment %} Image Field Builder {% endcomment %}
{% liquid
  assign build_image_field_id = build_image_field_id | default: ''
  assign build_image_field_label = build_image_field_label | default: ''
  assign build_image_field_info = build_image_field_info | default: ''
%}

{% comment %} Color Field Builder {% endcomment %}
{% liquid
  assign build_color_field_id = build_color_field_id | default: ''
  assign build_color_field_label = build_color_field_label | default: ''
  assign build_color_field_default = build_color_field_default | default: '#000000'
%}

{% comment %} Range Field Builder {% endcomment %}
{% liquid
  assign build_range_field_id = build_range_field_id | default: ''
  assign build_range_field_label = build_range_field_label | default: ''
  assign build_range_field_min = build_range_field_min | default: 0
  assign build_range_field_max = build_range_field_max | default: 100
  assign build_range_field_step = build_range_field_step | default: 1
  assign build_range_field_default = build_range_field_default | default: 50
  assign build_range_field_unit = build_range_field_unit | default: ''
%}

{% comment %} Select Field Builder {% endcomment %}
{% liquid
  assign build_select_field_id = build_select_field_id | default: ''
  assign build_select_field_label = build_select_field_label | default: ''
  assign build_select_field_options = build_select_field_options | default: blank
  assign build_select_field_default = build_select_field_default | default: ''
%}

{% comment %} Checkbox Field Builder {% endcomment %}
{% liquid
  assign build_checkbox_field_id = build_checkbox_field_id | default: ''
  assign build_checkbox_field_label = build_checkbox_field_label | default: ''
  assign build_checkbox_field_default = build_checkbox_field_default | default: false
  assign build_checkbox_field_info = build_checkbox_field_info | default: ''
%}

{% comment %} COMMON FIELD GROUPS {% endcomment %}

{% comment %} Spacing Controls Group {% endcomment %}
{% liquid
  assign spacing_group_prefix = spacing_group_prefix | default: 'section'
  assign spacing_controls = blank
%}

{% comment %} Color Scheme Group {% endcomment %}
{% liquid
  assign color_scheme_prefix = color_scheme_prefix | default: 'section'
  assign color_scheme_controls = blank
%}

{% comment %} Typography Group {% endcomment %}
{% liquid
  assign typography_prefix = typography_prefix | default: 'section'
  assign typography_controls = blank
%}

{% comment %} Animation Group {% endcomment %}
{% liquid
  assign animation_prefix = animation_prefix | default: 'section'
  assign animation_controls = blank
%}

{% comment %} CONDITIONAL LOGIC BUILDER {% endcomment %}
{% liquid
  assign conditional_field_id = conditional_field_id | default: ''
  assign conditional_depends_on = conditional_depends_on | default: ''
  assign conditional_value = conditional_value | default: ''
  assign conditional_operator = conditional_operator | default: '=='
%}

{% comment %} VALIDATION BUILDER {% endcomment %}
{% liquid
  assign validation_field_id = validation_field_id | default: ''
  assign validation_rules = validation_rules | default: blank
  assign validation_messages = validation_messages | default: blank
%}

{% comment %} SCHEMA ASSEMBLY METHODS {% endcomment %}

{% comment %} Build Complete Section Schema {% endcomment %}
{% liquid
  assign build_section_name = build_section_name | default: 'Custom Section'
  assign build_section_tag = build_section_tag | default: 'section'
  assign build_section_class = build_section_class | default: 'custom-section'
  assign build_section_disabled_on = build_section_disabled_on | default: blank
  assign build_section_limit = build_section_limit | default: blank
%}

{% comment %} Build Block Schema {% endcomment %}
{% liquid
  assign build_block_type = build_block_type | default: 'text'
  assign build_block_name = build_block_name | default: 'Text Block'
  assign build_block_icon = build_block_icon | default: 'text'
  assign build_block_limit = build_block_limit | default: blank
%}

{% comment %} PRESET GENERATOR {% endcomment %}
{% liquid
  assign preset_name = preset_name | default: 'Default'
  assign preset_blocks = preset_blocks | default: blank
  assign preset_settings = preset_settings | default: blank
%}

{% comment %} UTILITY METHODS {% endcomment %}

{% comment %} Generate Field ID {% endcomment %}
{% liquid
  assign generate_field_prefix = generate_field_prefix | default: ''
  assign generate_field_name = generate_field_name | default: ''
  assign generated_field_id = generate_field_prefix | append: '_' | append: generate_field_name | replace: ' ', '_' | downcase
%}

{% comment %} Validate Field Configuration {% endcomment %}
{% liquid
  assign validate_field_config = validate_field_config | default: blank
  assign field_validation_result = 'valid'
%}

{% comment %} Generate Documentation {% endcomment %}
{% liquid
  assign doc_section_name = doc_section_name | default: ''
  assign doc_field_count = doc_field_count | default: 0
  assign auto_documentation = blank
%}

{% comment %} ADVANCED SCHEMA PATTERNS {% endcomment %}

{% comment %} Repeater Field Pattern {% endcomment %}
{% liquid
  assign repeater_field_id = repeater_field_id | default: ''
  assign repeater_max_items = repeater_max_items | default: 10
  assign repeater_item_schema = repeater_item_schema | default: blank
%}

{% comment %} Conditional Group Pattern {% endcomment %}
{% liquid
  assign conditional_group_trigger = conditional_group_trigger | default: ''
  assign conditional_group_fields = conditional_group_fields | default: blank
%}

{% comment %} Media Gallery Pattern {% endcomment %}
{% liquid
  assign gallery_field_id = gallery_field_id | default: ''
  assign gallery_max_images = gallery_max_images | default: 8
  assign gallery_aspect_ratio = gallery_aspect_ratio | default: 'square'
%}

{% comment %} DEBUG AND DEVELOPMENT HELPERS {% endcomment %}
{% if settings.debug_mode %}
  <script>
    console.log('üìã Schema Builder Loaded');
    console.log('üîß Available Field Types:', ['text', 'richtext', 'image_picker', 'color', 'range', 'select', 'checkbox', 'conditional']);
    console.log('üì¶ Field Groups:', ['spacing', 'color_scheme', 'typography', 'animation']);
    console.log('‚ö° Advanced Patterns:', ['repeater', 'conditional_group', 'media_gallery']);
  </script>
{% endif %}

{% comment %} SCHEMA BUILDER INITIALIZATION {% endcomment %}
<style>
  .schema-builder-debug {
    display: none;
    position: fixed;
    top: 10px;
    right: 10px;
    background: #f0f0f0;
    padding: 1rem;
    border-radius: 8px;
    font-family: monospace;
    font-size: 12px;
    z-index: 9999;
  }
  
  {% if settings.debug_mode %}
    .schema-builder-debug {
      display: block;
    }
  {% endif %}
</style>

{% if settings.debug_mode %}
  <div class="schema-builder-debug">
    <strong>üèóÔ∏è Schema Builder Active</strong><br>
    Fields Built: <span id="fields-count">0</span><br>
    Validation: <span id="validation-status">‚úÖ</span><br>
    Version: 1.0.0
  </div>
{% endif %}