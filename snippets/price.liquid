{%- comment -%}
  Royal Equips Price Component
  Renders product pricing with luxury styling and comprehensive options
{%- endcomment -%}

{%- liquid
  assign target = product
  assign price_class = 'royal-price'
  
  if use_variant
    assign target = product.selected_or_first_available_variant
  endif

  if target == blank
    assign target = product
  endif

  assign compare_at_price = target.compare_at_price
  assign price = target.price | default: 1999
  assign price_min = product.price_min
  assign price_max = product.price_max
  assign available = target.available | default: false
  assign money_price = price | money
  assign money_price_min = price_min | money
  assign money_price_max = price_max | money
  
  if settings.currency_code_enabled
    assign money_price = price | money_with_currency
    assign money_price_min = price_min | money_with_currency
    assign money_price_max = price_max | money_with_currency
  endif

  if target == product and product.price_varies
    assign money_price = 'products.product.price.from_price_html' | t: price: money_price
  endif
-%}

<div class="{{ price_class }}"
     {% if target == product %}
       data-price-range="true"
       data-price-min="{{ price_min }}"
       data-price-max="{{ price_max }}"
     {% else %}
       data-price="{{ price }}"
     {% endif %}>
  
  {%- comment -%} Regular pricing {%- endcomment -%}
  {%- unless product.price_varies == false and variant.compare_at_price -%}
    <div class="royal-price__regular">
      {%- if product.price_varies -%}
        <span class="royal-price__range">
          <span class="royal-caption">{{ 'products.product.price.from' | t }}</span>
          <span class="royal-price__amount royal-price__amount--min">{{ money_price_min }}</span>
          {%- if price_min != price_max -%}
            <span class="royal-price__separator">-</span>
            <span class="royal-price__amount royal-price__amount--max">{{ money_price_max }}</span>
          {%- endif -%}
        </span>
      {%- else -%}
        <span class="royal-price__amount" data-price-amount>
          {{ money_price }}
        </span>
      {%- endif -%}
    </div>
  {%- endunless -%}

  {%- comment -%} Compare at pricing {%- endcomment -%}
  {%- if compare_at_price > price -%}
    <div class="royal-price__compare">
      <span class="royal-price__compare-amount">
        {%- if settings.currency_code_enabled -%}
          {{ compare_at_price | money_with_currency }}
        {%- else -%}
          {{ compare_at_price | money }}
        {%- endif -%}
      </span>
      
      {%- comment -%} Calculate and show savings {%- endcomment -%}
      {%- assign savings = compare_at_price | minus: price -%}
      {%- assign savings_percentage = savings | times: 100.0 | divided_by: compare_at_price | round -%}
      
      <div class="royal-price__savings">
        <span class="royal-price__savings-amount">
          {{ 'products.product.price.save' | t }}
          {%- if settings.currency_code_enabled -%}
            {{ savings | money_with_currency }}
          {%- else -%}
            {{ savings | money }}
          {%- endif -%}
        </span>
        <span class="royal-price__savings-percentage">
          ({{ savings_percentage }}% {{ 'products.product.price.off' | t }})
        </span>
      </div>
    </div>
  {%- endif -%}

  {%- comment -%} Sale badge {%- endcomment -%}
  {%- if show_badges and compare_at_price > price -%}
    <div class="royal-price__badge">
      <span class="royal-badge royal-badge--sale">
        {{ 'products.product.on_sale' | t }}
      </span>
    </div>
  {%- endif -%}

  {%- comment -%} Sold out badge {%- endcomment -%}
  {%- if show_badges and available == false -%}
    <div class="royal-price__badge">
      <span class="royal-badge royal-badge--sold-out">
        {{ 'products.product.sold_out' | t }}
      </span>
    </div>
  {%- endif -%}

  {%- comment -%} Unit price {%- endcomment -%}
  {%- if target.unit_price_measurement -%}
    <div class="royal-price__unit">
      <span class="royal-caption">
        {%- if settings.currency_code_enabled -%}
          {{ target.unit_price | money_with_currency }}
        {%- else -%}
          {{ target.unit_price | money }}
        {%- endif -%}
        {{ 'products.product.price.per' | t }}
        {%- if target.unit_price_measurement.reference_value != 1 -%}
          {{ target.unit_price_measurement.reference_value }}
        {%- endif -%}
        {{ target.unit_price_measurement.reference_unit }}
      </span>
    </div>
  {%- endif -%}

  {%- comment -%} Payment terms {%- endcomment -%}
  {%- form 'product', product, id: 'product-form-installment', class: 'installment caption-large' -%}
    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
    {{ form | payment_terms }}
  {%- endform -%}
</div>

<style>
  .royal-price {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    font-family: var(--font-heading-family);
    font-weight: 600;
  }

  .royal-price__regular {
    display: flex;
    align-items: baseline;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  .royal-price__range {
    display: flex;
    align-items: baseline;
    gap: var(--space-xs);
  }

  .royal-price__amount {
    font-size: clamp(1.125rem, 2.5vw, 1.5rem);
    font-weight: 700;
    color: var(--color-royal-blue);
    letter-spacing: -0.01em;
  }

  .royal-price__amount--min,
  .royal-price__amount--max {
    font-size: clamp(1rem, 2.2vw, 1.25rem);
  }

  .royal-price__separator {
    color: var(--color-royal-silver);
    margin: 0 2px;
  }

  .royal-price__compare {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .royal-price__compare-amount {
    font-size: 0.875rem;
    font-weight: 500;
    color: rgba(192, 192, 192, 0.6);
    text-decoration: line-through;
    text-decoration-color: rgba(255, 107, 53, 0.8);
    text-decoration-thickness: 2px;
  }

  .royal-price__savings {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    flex-wrap: wrap;
  }

  .royal-price__savings-amount {
    font-size: 0.8rem;
    font-weight: 600;
    color: #28a745;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .royal-price__savings-percentage {
    font-size: 0.75rem;
    font-weight: 500;
    color: rgba(40, 167, 69, 0.8);
  }

  .royal-price__badge {
    margin-top: var(--space-xs);
  }

  .royal-price__unit {
    margin-top: var(--space-xs);
    opacity: 0.8;
  }

  /* Installment payments */
  .installment {
    margin-top: var(--space-sm);
    font-size: 0.8rem;
    color: var(--color-royal-silver);
  }

  /* States */
  .royal-price[data-price-range="true"] .royal-price__amount {
    background: var(--gradient-blue);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  /* Mobile optimizations */
  @media (max-width: 480px) {
    .royal-price__savings {
      flex-direction: column;
      align-items: flex-start;
      gap: 2px;
    }
  }

  /* High contrast mode */
  @media (prefers-contrast: high) {
    .royal-price__compare-amount {
      color: #999;
      text-decoration-color: #ff0000;
    }
    
    .royal-price__amount {
      color: var(--color-royal-blue);
      text-shadow: none;
    }
  }
</style>